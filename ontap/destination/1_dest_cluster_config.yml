---
- hosts: localhost
  collections:
    - netapp.ontap
  gather_facts: no
  name: Destination Cluster Config
  vars:
    input: &login
      hostname: "{{ netapp_hostname }}"
      username: "{{ netapp_username }}"
      password: "{{ netapp_password }}"
      https: true
      validate_certs: false
  vars_files:
    - standard_platform_vars.yml
    - specific_config_vars.yml
  vars_prompt:
    - name: "netapp_password"
      prompt: "Enter NetApp Admin Password"
      private: yes
  tasks:

# ROLE: na_ontap_config_cluster

  roles:
    - na_ontap_cluster_config
    - na_ontap_vserver_create

###
# Standard Cluster configuration section
###

###
# Renaming section
###

# This renames: nodenames, root aggregates, and root volumes.
# This isn't required. However, naming conventiones may require it.
# Here is how it can be accomplished:


# Rename root volume section - Ex: cluster_02_vol0 to cluster_02_root
# This can be useful as the first node in the cluster
# can have a different naming scheme

  #- name: rename root volumes
  #  na_ontap_volume:
  #    state: present
  #    from_name: "{{ item.name }}"
  #    name: "{{ item.rename }}"
  #    percent_snapshot_space: 0
  #    vserver: "{{ item.vserver }}"
  #    comment: "{{ item.comment }}"
  #    <<: *login
  #  with_items: "{{ vol0_list }}"

# Rename root aggregate section - Ex: aggr0_cluster_01 to clusterh01a_aggr0

#  - name: rename root aggregates
#    na_ontap_aggregate:
#      state: present
#      service_state: online
#      from_name: "{{ item.name }}"
#      name: "{{ item.rename }}"
#      <<: *login
#    with_items: "{{ aggr_list }}"

# Rename node section - Ex: cluster-01 to clusterh01a

#  - name: rename node
#    na_ontap_node:
#       from_name: "{{ item.from_name }}"
#       name: "{{ item.name }}"
#       <<: *login
#    with_list: "{{ node_names }}"

###
# Standard SVM configuration section
###



# non-ROLE: Update default NFS Server configuration

#  - name: Manage NFS
#    na_ontap_nfs:
#      state: "{{ state }}"
#      service_state: started
#      vserver: "{{ SVM }}"
#      nfsv3: enabled
#      nfsv4: disabled
#      nfsv41: disabled
#      tcp: enabled
#      udp: disabled
#      vstorage_state: disabled
#      <<: *login

# Managing Export-policies
  tasks:

  - name: Create SVM Export-policy
    na_ontap_export_policy:
      state: "{{ state }}"
      name: "{{ svm_export_policy_name }}"
      vserver: "{{ svm }}"
      <<: *login

  - name: Setup "Default" and SVM Export-policies
    na_ontap_export_policy_rule:
      state: "{{ state }}"
      policy_name: "{{ item.name }}"
      vserver: "{{ svm }}"
   #    client_match: 0.0.0.0/0,1.1.1.0/24
      client_match: "{{ item.client_match }}"
      ro_rule: "{{ item.ro_rule }}"
      rw_rule: "{{ item.rw_rule }}"
      rule_index: "{{ item.rule_index }}"
      super_user_security: "{{ item.super_user_security }}"
      <<: *login
    with_items: "{{ export_policy_rules_list }}"
