---

- name: 'validate required inputs'
  assert:
    that:
      - aiqum_prov.vserver_name         is defined
      - aiqum_prov.service_level_name   is defined
      - aiqum_prov.vol_name             is defined
      - aiqum_prov.capacity           is defined

  ignore_errors:    true
  register:         ed_failed

- name: 'fail on invalid parameters'
  fail:
    msg: 'ERROR: invalid parameters'
  when:
    - ed_failed.failed

- name: AIQUM Get Datacenter SVMs
  uri:
    method: GET
    url: "{{ aiqum_endpoint_url }}/datacenter/svm/svms"
    return_content: yes
    headers:
      accept: application/json
    url_username: "{{ aiqum_username }}"
    url_password: "{{ aiqum_password }}"
    validate_certs: false
    force_basic_auth: yes
  register: json_response

- name: grab the svm key
  set_fact:
    svm_key:  "{{ item.key }}"
  loop:   "{{ json_response.json.records }}"
  when:
    - item.name == aiqum_prov.vserver_name

- name: AIQUM Get Service
  uri:
    method: GET
    url: "{{ aiqum_endpoint_url }}/storage-provider/performance-service-levels"
    return_content: yes
    headers:
      accept: application/json
    url_username: "{{ aiqum_username }}"
    url_password: "{{ aiqum_password }}"
    validate_certs: false
    force_basic_auth: yes
  register: json_response

- name: 'grab service level key'
  set_fact:
    service_level_key:    "{{ item.key }}"
  loop:   "{{ json_response.json.records }}"
  when:
    - item.name == aiqum_prov.service_level_name

- name: AIQUM Provision NFS Export
  uri:
    method: POST
    url: "{{ aiqum_endpoint_url }}/storage-provider/file-shares"
    return_content: yes
    body:
      name:      "{{ aiqum_prov.vol_name }}"
      performance_service_level:
        key: "{{ service_level_key }}"
      space:
        size: "{{ aiqum_prov.capacity }}"
      svm:
        key: "{{ svm_key }}"
    body_format: json
    force_basic_auth: yes
    validate_certs:   false
    url_username:     "{{ aiqum_username }}"
    url_password:     "{{ aiqum_password }}"
    headers:
      Accept: application/json
    status_code:      202
  register: json_response
